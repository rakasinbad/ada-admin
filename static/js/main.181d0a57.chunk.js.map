{"version":3,"sources":["lib/Auth.js","redux/LoginRedux.js","assets/images/logo.svg","themes/Colors.js","assets/fonts/NunitoSans-Regular.ttf","assets/fonts/NunitoSans-Black.ttf","constants/deviceSize.js","themes/Fonts.js","themes/Typography.js","themes/Container.js","components/button/StyledButton.js","components/button/index.js","containers/Dashboard.js","containers/styles/StyledLogin.js","components/container/StyledContainer.js","components/container/index.js","components/input/StyledInput.js","components/input/index.js","containers/Login.js","constants/Errors.js","services/LoginApi.js","sagas/LoginSagas.js","sagas/index.js","redux/index.js","App.js","redux/CreateStore.js","registerServiceWorker.js","index.js","config/AppConfig.js"],"names":["createActions","loginRequest","loginSuccess","loginFailure","reminderRequest","reminderSuccess","reminderFailure","checkIfLoggedInRequest","checkIfLoggedInSuccess","checkIfLoggedInFailure","logout","Types","Creators","LoginTypes","INITIAL_STATE","Immutable","username","error","errorReminder","fetching","fetchingIfLoggedIn","fetchingReminder","fullName","loggedIn","picture","email","request","state","merge","success","failure","localStorage","removeItem","requestReminder","successReminder","emailReminder","failureReminder","requestCheckIfLoggedIn","successCheckIfLoggedIn","failureCheckIfLoggedIn","reducer","createReducer","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","REMINDER_REQUEST","REMINDER_SUCCESS","REMINDER_FAILURE","CHECK_IF_LOGGED_IN_REQUEST","CHECK_IF_LOGGED_IN_SUCCESS","CHECK_IF_LOGGED_IN_FAILURE","LOGOUT","isLoggedIn","loginState","colors","primaryBgColor","color","color2","color3","color4","color5","size","device","mobileS","mobileM","mobileL","smMaterialUI","tablet","tabletL","laptop","laptopL","desktop","desktopL","FontRegular","css","NunitoSans","FontBold","NunitoSansBold","titleSize","size38","size32","size20","size18","size18_12onMobile","size18_11onMobile","size16","size14","size14_12onMobile","size12","Title","styled","h1","Fonts","props","customStyle","SubTitle","FontNexaLight","Colors","lightblue","customStyles","DialogTitle","FontAvenir","dialogTitleSize","Paragraph","p","paragraph","RedText","redText","FooterText","white","div","custom_styles","StyledButton","Button","text","className","defaultProps","Dashboard","this","Component","connect","login","StyledLogin","Wrapper","StyledContainer","Container","styledProps","children","PropTypes","node","any","StyledInput","containerStyle","Input","inputProps","string","Typography","Login","placeholder","LOGIN_ERRORS","password","fetch","Config","API_BASE_URL","method","headers","APP_NAME","body","JSON","stringify","pass","then","response","status","json","ok","err","e","console","warn","responseJson","jwtToken","setItem","Date","toJSON","user","catch","checkAuth","a","getItem","Authorization","reminder","encodeURIComponent","res","hash","_id","postData","API_MAIL_URL","sendMailRes","regexEmail","api","action","trim","length","put","LoginActions","test","call","root","all","takeLatest","loginApi","reducers","combineReducers","require","store","rootReducer","rootSaga","middleware","enhancers","sagaMiddleware","createSagaMiddleware","sagaMonitor","push","applyMiddleware","createAppropriateStore","createStore","compose","sagasManager","run","configureStore","history","App","exact","path","component","style","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.181d0a57.chunk.js","sourcesContent":["import Config from '../config/AppConfig';\n\nexport async function authFetch(url, method = 'GET', body = null) {\n  const token = getToken();\n\n  const data = await fetch(`${Config.API_BASE_URL}${url}`, {\n    method,\n    body,\n    headers: {\n      'Content-Type': 'application/json',\n      'X-Delegated-Application': Config.APP_NAME,\n      Authorization: `Bearer ${token}`\n    }\n  })\n    .then(response => {\n      if (response.status === 200 || response.status === 201) {\n        try {\n          return response.json();\n        } catch (e) {\n          return response;\n        }\n      }\n\n      return { status: false };\n    })\n    .then(responseJson => {\n      return responseJson;\n    })\n    .catch(error => {\n      console.log('Err auth fetch', error);\n      return false;\n    });\n\n  return data;\n}\n\nexport const getToken = () => {\n  const accessToken = localStorage.getItem('@auth:token');\n\n  return accessToken;\n};\n\nexport const cleanStorage = () => {\n  localStorage.removeItem('@auth:token');\n  localStorage.removeItem('@auth:tokenTime');\n};\n","import { createReducer, createActions } from 'reduxsauce';\nimport Immutable from 'seamless-immutable';\n\nimport { cleanStorage } from '../lib/Auth';\n\n/* ------------- Types and Action Creators ------------- */\n\nconst { Types, Creators } = createActions({\n  loginRequest: ['username', 'password'],\n  loginSuccess: ['username'],\n  loginFailure: ['error'],\n  reminderRequest: ['emailReminder'],\n  reminderSuccess: ['email'],\n  reminderFailure: ['errorReminder'],\n  checkIfLoggedInRequest: null,\n  checkIfLoggedInSuccess: ['loggedIn'],\n  checkIfLoggedInFailure: ['error'],\n  logout: null\n});\n\nexport const LoginTypes = Types;\nexport default Creators;\n\n/* ------------- Initial State ------------- */\n\nexport const INITIAL_STATE = Immutable({\n  username: 'RAKA',\n  error: null,\n  errorReminder: null,\n  fetching: false,\n  fetchingIfLoggedIn: false,\n  fetchingReminder: false,\n  fullName: null,\n  loggedIn: false,\n  picture: null,\n  email: null\n});\n\n/* ------------- Reducers ------------- */\n\n// we're attempting to login\nexport const request = state => state.merge({ fetching: true });\n\n// we've successfully logged in\nexport const success = (state, { username }) =>\n  state.merge({ fetching: false, error: null, username });\n\n// we've had a problem logging in\nexport const failure = (state, { error }) =>\n  state.merge({ fetching: false, error });\n\n// we've logged out\nexport const logout = state => {\n  cleanStorage();\n  return INITIAL_STATE;\n};\n\nexport const requestReminder = state => state.merge({ fetchingReminder: true });\n\nexport const successReminder = (state, { emailReminder }) =>\n  state.merge({ fetchingReminder: false, errorReminder: null, emailReminder });\n\nexport const failureReminder = (state, { errorReminder }) =>\n  state.merge({ fetchingReminder: false, errorReminder });\n\nexport const requestCheckIfLoggedIn = state =>\n  state.merge({ fetchingIfLoggedIn: true });\n\nexport const successCheckIfLoggedIn = (state, { loggedIn }) =>\n  state.merge({ fetchingIfLoggedIn: false, loggedIn });\n\nexport const failureCheckIfLoggedIn = state =>\n  state.merge({ fetchingIfLoggedIn: false, loggedIn: false });\n\n/* ------------- Hookup Reducers To Types ------------- */\n\nexport const reducer = createReducer(INITIAL_STATE, {\n  [Types.LOGIN_REQUEST]: request,\n  [Types.LOGIN_SUCCESS]: success,\n  [Types.LOGIN_FAILURE]: failure,\n  [Types.REMINDER_REQUEST]: requestReminder,\n  [Types.REMINDER_SUCCESS]: successReminder,\n  [Types.REMINDER_FAILURE]: failureReminder,\n  [Types.CHECK_IF_LOGGED_IN_REQUEST]: requestCheckIfLoggedIn,\n  [Types.CHECK_IF_LOGGED_IN_SUCCESS]: successCheckIfLoggedIn,\n  [Types.CHECK_IF_LOGGED_IN_FAILURE]: failureCheckIfLoggedIn,\n  [Types.LOGOUT]: logout\n});\n\n/* ------------- Selectors ------------- */\n\n// Is the current user logged in?\nexport const isLoggedIn = loginState => loginState.username !== null;\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","\nconst colors = {\n  primaryBgColor: '#EEF1F5',\n  color: '#000000',\n  color2: '#424242',\n  color3: '#FFFFFF',\n  color4: '#EEEEEE',\n  color5: '#939393',\n}\n\nexport default colors\n","export default __webpack_public_path__ + \"static/media/NunitoSans-Regular.87d92665.ttf\";","export default __webpack_public_path__ + \"static/media/NunitoSans-Black.a2cd9dc8.ttf\";","const size = {\n  mobileS: \"0px\",\n  mobileM: \"375px\",\n  mobileL: \"475px\",\n  smMaterialUI: \"599px\",\n  tablet: \"768px\",\n  tabletL: \"960px\",\n  laptop: \"1024px\",\n  laptopL: \"1440px\",\n  desktop: \"1821px\",\n  desktopL: \"2560px\"\n};\n\nexport const device = {\n  mobileS: `(max-width: ${size.mobileS})`,\n  mobileM: `(max-width: ${size.mobileM})`,\n  mobileL: `(max-width: ${size.mobileL})`,\n  smMaterialUI: `(max-width: ${size.smMaterialUI})`,\n  tablet: `(max-width: ${size.tablet})`,\n  tabletL: `(max-width: ${size.tabletL})`,\n  laptop: `(max-width: ${size.laptop})`,\n  laptopL: `(max-width: ${size.laptopL})`,\n  desktop: `(max-width: ${size.desktop})`,\n  desktopL: `(max-width: ${size.desktopL})`\n};\n","import { css } from \"styled-components\";\nimport NunitoSans from \"../assets/fonts/NunitoSans-Regular.ttf\";\nimport NunitoSansBold from \"../assets/fonts/NunitoSans-Black.ttf\";\nimport { device } from '../constants/deviceSize'\n\n// const type = {\n//   base: 'NunitoSans-Regular',\n//   bold: 'NunitoSans-Bold',\n//   italic: 'NunitoSans-RegularItalic',\n//   semiBold: 'NunitoSans-SemiBold',\n//   semiBoldItalic: 'NunitoSans-SemiBoldItalic',\n//   black: 'NunitoSans-Black',\n//   blackItalic: 'NunitoSans-BlackItalic',\n//   boldItalic: 'NunitoSans-BoldItalic',\n//   extraBold: 'NunitoSans-ExtraBold',\n//   extraBoldItalic: 'NunitoSans-ExttraBoldItalic',\n//   extraLight: 'NunitoSans-ExtraLight',\n//   extraLightItalic: 'NunitoSans-ExtraLightItalic',\n//   light: 'NunitoSans-Light',\n//   lightItalic: 'NunitoSans-LightItalic',\n// }\n\nconst FontRegular = css`\n  @font-face {\n    font-family: NunitoSans;\n    src: url(${NunitoSans});\n  }\n  font-family: NunitoSans, Arial, serif, Helvetica, sans-serif;\n`\n\nconst FontBold = css`\n  @font-face {\n    font-family: NunitoSansBold;\n    src: url(${NunitoSansBold});\n  }\n  font-family: NunitoSansBold, Arial, serif, Helvetica, sans-serif;\n`\n\nconst size = {\n  titleSize: css`\n    font-size: 40px;\n    @media ${device.desktop} {\n      font-size: 30px\n    }\n    @media ${device.tablet} {\n      font-size: 24px\n    }\n  `,\n  size38: css`\n    font-size: 38px;\n  `,\n  size32: css`\n    font-size: 32px;\n  `,\n  size20: css`\n    font-size: 20px;\n    @media ${device.desktop} {\n      font-size: 16px\n    }\n    @media ${device.tablet} {\n      font-size: 14px\n    }\n  `,\n  size18: css`\n    font-size: 18px;\n    @media ${device.desktop} {\n      font-size: 16px\n    }\n    @media ${device.tablet} {\n      font-size: 14px\n    }\n  `,\n  size18_12onMobile: css`\n    font-size: 18px;\n    @media ${device.desktop} {\n      font-size: 16px\n    }\n    @media ${device.mobileM} {\n      font-size: 12px\n    }\n  `,\n  size18_11onMobile: css`\n    font-size: 18px;\n    @media ${device.desktop} {\n      font-size: 16px\n    }\n    @media ${device.mobileM} {\n      font-size: 11px\n    }\n  `,\n  size16: css`\n    font-size: 16px;\n    @media ${device.desktop} {\n      font-size: 14px\n    }\n    @media ${device.mobileM} {\n      font-size: 10px\n    }\n  `,\n  size14: css`\n    font-size: 14px;\n    @media ${device.desktop} {\n      font-size: 11px\n    }\n    @media ${device.mobileM} {\n      font-size: 9px\n    }\n  `,\n   size14_12onMobile: css`\n    font-size: 14px;\n    @media ${device.mobileM} {\n      font-size: 12px\n    }\n   `,\n  size12: css`\n    font-size: 12px;\n    @media ${device.desktop} {\n      font-size: 10px;\n    }\n    @media ${device.mobileM} {\n      font-size: 8;\n    }\n  `,\n}\n\nexport default {\n  FontRegular,\n  FontBold,\n  size,\n}","import styled from 'styled-components'\nimport { Fonts, Colors } from './'\nimport { device } from '../constants/deviceSize'\n\nconst Title = styled.h1`\n  ${Fonts.FontBold}\n  ${Fonts.size.size32}\n  ${props => props.customStyle}\n`\n\nconst SubTitle = styled.h1`\n  ${Fonts.FontNexaLight}\n  ${Fonts.size.size14}\n  letter-spacing: 3.5px;\n  font-weight: bold;\n  color: ${Colors.lightblue};\n  @media (max-width: 182px) {\n    letter-spacing: 0;\n  }\n  ${props => props.customStyles}\n`\n\nconst DialogTitle = styled.h1`\n  ${Fonts.FontAvenir}\n  ${Fonts.size.dialogTitleSize}\n  font-weight: bold;\n  text-align: center;\n  color: ${Colors.lightblue};\n  margin: 1em 0;\n  ${props => props.customStyles}\n`\n\nconst Paragraph = styled.p`\n  ${Fonts.FontAvenir}\n  color: ${Colors.paragraph};\n  ${props => props.customStyles}\n`\n\nconst RedText = styled.p`\n  ${Fonts.FontNexaLight}\n  ${Fonts.size.size14_12onMobile}\n  font-weight: bold;\n  letter-spacing: 3.5px;\n  :hover {\n    cursor: pointer;\n  }\n  color: ${Colors.redText};\n  @media ${device.smMaterialUI} {\n    text-align: center;\n  }\n  ${props => props.customStyles}\n`\n\nconst FooterText = styled.p`\n  ${Fonts.FontNexaLight}\n  color: ${Colors.white};\n  ${props => props.customStyles}\n`\n\nexport default {\n  Title,\n  SubTitle,\n  DialogTitle,\n  Paragraph,\n  RedText,\n  FooterText\n}","import styled from 'styled-components'\n\nconst Container = styled.div`\n  width: 73.5416666667%;\n  margin: 0 auto;\n  ${props => props.custom_styles}\n`\n\nexport default Container\n","import styled from \"styled-components\";\nimport { Colors, Fonts, Scale } from '../../themes';\nimport { deviceSize } from '../../constants/deviceSize'\n\nexport const StyledButton = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: linear-gradient(132.58deg, #62318C 26.06%, #512874 80.3%);\n  padding: 13px 0;\n  border-radius: 15px;\n  :hover {\n    cursor: pointer;\n  }\n  .button-text {\n    ${Fonts.FontRegular}\n    ${Fonts.size.size16}\n    color: ${Colors.color3};\n  }\n`","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { StyledButton } from './StyledButton'\n\nfunction Button({ text }) {\n  return (\n    <StyledButton>\n      <p className=\"button-text\">{text}</p>\n    </StyledButton>\n  )\n}\n\nButton.propTypes = {\n  text: PropTypes.string,\n}\n\nButton.defaultProps = {\n  text: '',\n}\n\nexport default Button\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom'\n\nimport logo from '../assets/images/logo.svg';\n\nimport Button from '../components/button'\n\nclass Dashboard extends Component {\n  render() {\n    const { username } = this.props;\n    // return <Redirect to=\"/login\" />\n    return (\n      <div className=\"App\">\n        \n        \n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.login.username\n  };\n};\n\nexport default connect(mapStateToProps, null)(Dashboard);\n","import styled from \"styled-components\";\nimport { Colors, Fonts, Scale } from '../../themes';\nimport { deviceSize } from '../../constants/deviceSize'\n\nexport const StyledLogin = styled.div`\n  background-color: ${Colors.color3};\n  border-radius: 20px;\n  width: 375px;\n`\n\nexport const Wrapper = styled.div`\n  margin: 68px 51px 30px;\n`","import styled from \"styled-components\";\nimport { Colors, Fonts, Scale } from '../../themes';\nimport { deviceSize } from '../../constants/deviceSize'\n\nexport const StyledContainer = styled.div`\n  display: flex;\n  min-height: 100vh;\n  justify-content: center;\n  align-items: center;\n  background-color: ${Colors.primaryBgColor};\n`","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { StyledContainer } from './StyledContainer'\n\nfunction Container(props) {\n  return (\n    <StyledContainer {...props.styledProps}>\n      {props.children}\n    </StyledContainer>\n  )\n}\n\nContainer.PropTypes = {\n  children: PropTypes.node,\n  styledProps: PropTypes.any,\n}\n\nContainer.defaultProps = {\n  children: null,\n  styledProps: {},\n}\n\nexport default Container\n\n","import styled from \"styled-components\";\nimport { Colors, Fonts, Scale } from '../../themes';\nimport { deviceSize } from '../../constants/deviceSize'\n\nexport const StyledInput = styled.div`\n  display: flex;\n  width: 100%;\n  background-color: ${Colors.color4};\n  border-radius: 10px;\n  margin: 15px 0;\n  \n  .input-field {  \n    width: 100%;\n    padding: 17px 24px 16px;\n    outline: none;\n  }\n\n  input {\n    background: rgba(0, 0, 0, 0);\n    border: none;\n    outline: none;\n    font-family: NunitoSans;\n    color: ${Colors.color};\n    ${Fonts.size.size14}\n  }\n  \n  ::placeholder {\n    font-family: NunitoSans;\n    color: ${Colors.color5};\n    ${Fonts.size.size14}\n  }\n  ${props => props.containerStyle}\n`","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { StyledInput } from \"./StyledInput\";\n\nfunction Input({ inputProps, containerStyle }) {\n  return (\n    <StyledInput containerStyle={containerStyle}>\n      <input {...inputProps} className=\"input-field\" />\n    </StyledInput>\n  )\n}\n\nInput.PropTypes = {\n  inputProps: PropTypes.any,\n  containerStyle: PropTypes.string,\n}\n\nInput.defaultProps = {\n  inputProps: {},\n  containerStyle: ``,\n}\n\nexport default Input\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { StyledLogin, Wrapper } from './styles/StyledLogin'\nimport { Typography } from '../themes'\nimport Container from '../components/container'\nimport Input from '../components/input'\nimport Button from '../components/button'\n\nconst { Title } = Typography\n\nexport class Login extends Component {\n  render() {\n    return (\n      <Container>\n        <StyledLogin>\n          <Wrapper>\n            <Title customStyle={` color: black; `}>Admin Login</Title>\n            <Input inputProps={{ placeholder: \"Phone number\" }} containerStyle={` margin-top: 33px; `} />\n            <Input inputProps={{ placeholder: \"Password\" }} />\n            <Button \n              text=\"Register\"\n            />\n          </Wrapper>\n        </StyledLogin>\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  \n})\n\nconst mapDispatchToProps = {\n  \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n","const LOGIN_ERRORS = {\n  FORMAT_REMINDER: 'FORMAT_REMINDER',\n  MISSING_REMINDER: 'MISSING_REMINDER',\n  NO_ACCOUNT: 'NO_ACCOUNT',\n  WRONG: 'WRONG',\n  WRONG_EMAIL_FORMAT: 'WRONG_EMAIL_FORMAT'\n};\n\nexport { LOGIN_ERRORS };\n","import Config from '../config/AppConfig';\nimport { LOGIN_ERRORS } from '../constants/Errors';\n\nexport default {\n  // Functions return fixtures\n  login: (username, password) => {\n    return fetch(`${Config.API_BASE_URL}/users/connect`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Delegated-Application': Config.APP_NAME\n      },\n      body: JSON.stringify({ login: username, pass: password })\n    })\n      .then(response => {\n        try {\n          if (response && response.status === 200) {\n            return response.json();\n          } else {\n            return { ok: false, err: LOGIN_ERRORS.WRONG };\n          }\n        } catch (e) {\n          console.warn('=> Error login request', e);\n          return { ok: false, err: e };\n        }\n      })\n      .then(responseJson => {\n        if (responseJson && !responseJson.err && responseJson.jwtToken) {\n          localStorage.setItem('@auth:token', responseJson.jwtToken);\n          localStorage.setItem('@auth:tokenTime', new Date().toJSON());\n          return { ok: true, user: responseJson };\n        } else {\n          return { ok: false, err: responseJson.err };\n        }\n      })\n      .catch(error => {\n        console.warn('=> Error login', error);\n        return { ok: false, error };\n      });\n  },\n\n  checkAuth: async () => {\n    const jwtToken = localStorage.getItem('@auth:token');\n\n    return fetch(`${Config.API_BASE_URL}/checkauth`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Delegated-Application': Config.APP_NAME,\n        Authorization: `${jwtToken}`\n      }\n    })\n      .then(response => {\n        try {\n          if (response && response.status === 200) {\n            return response.json();\n          } else {\n            return { ok: false, err: LOGIN_ERRORS.WRONG };\n          }\n        } catch (e) {\n          console.warn('=> Error check auth request', e);\n          return { ok: false, err: e };\n        }\n      })\n      .then(async responseJson => {\n        if (responseJson && !responseJson.err && responseJson.jwtToken) {\n          localStorage.setItem('@auth:token', responseJson.jwtToken);\n          localStorage.setItem('@auth:tokenTime', new Date().toJSON());\n          return { ok: true, user: responseJson };\n        } else {\n          localStorage.removeItem('@auth:token');\n          localStorage.removeItem('@auth:tokenTime');\n          return { ok: false, err: responseJson.err };\n        }\n      })\n      .catch(async error => {\n        console.warn('=> Error check auth', error);\n        localStorage.removeItem('@auth:token');\n        localStorage.removeItem('@auth:tokenTime');\n        return { ok: false, error };\n      });\n  },\n\n  reminder: async email => {\n    const res = await fetch(\n      `${Config.API_BASE_URL}/getbymail/${encodeURIComponent(email)}`\n    )\n      .then(response => {\n        if (response.status === 200 || response.status === 201) {\n          try {\n            return response.json();\n          } catch (e) {\n            return response;\n          }\n        }\n      })\n      .then(responseJson => {\n        return responseJson;\n      });\n\n    if (res && res.hash && res._id) {\n      const postData =\n        'user_id=' +\n        encodeURIComponent(res._id) +\n        '&user_hash=' +\n        encodeURIComponent(res.hash) +\n        '&user_login=' +\n        encodeURIComponent(email);\n\n      const sendMailRes = await fetch(`${Config.API_MAIL_URL}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'X-Delegated-Application': Config.APP_NAME\n        },\n        body: postData\n      }).then(response => {\n        try {\n          if (response && response.status === 200) {\n            return { ok: true };\n          } else {\n            return { ok: false, err: LOGIN_ERRORS.WRONG };\n          }\n        } catch (e) {\n          console.warn('=> Error login request', e);\n          return { ok: false, err: e };\n        }\n      });\n\n      return sendMailRes;\n    } else {\n      return { ok: false, err: LOGIN_ERRORS.NO_ACCOUNT };\n    }\n  }\n};\n","import { call, put } from 'redux-saga/effects';\nimport LoginActions from '../redux/LoginRedux';\nimport { LOGIN_ERRORS } from '../constants/Errors';\n\nconst regexEmail = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n// attempts to login\nexport function* login(api, action) {\n  const { username, password } = action;\n\n  if (!password || password.trim().length <= 0) {\n    yield put(LoginActions.loginFailure(LOGIN_ERRORS.WRONG));\n  } else if (!regexEmail.test(username)) {\n    yield put(LoginActions.loginFailure(LOGIN_ERRORS.WRONG_EMAIL_FORMAT));\n  } else {\n    const response = yield call(api.login, username, password);\n\n    if (response.ok) {\n      yield put(LoginActions.loginSuccess(username));\n    } else {\n      yield put(LoginActions.loginFailure(LOGIN_ERRORS.WRONG));\n    }\n  }\n}\n\nexport function* checkAuth(api, action) {\n  const response = yield call(api.checkAuth);\n\n  if (response.ok) {\n    yield put(LoginActions.checkIfLoggedInSuccess(true));\n  } else {\n    yield put(LoginActions.checkIfLoggedInFailure(false));\n  }\n}\n\nexport function* reminder(api, action) {\n  const { emailReminder } = action;\n\n  if (!emailReminder || emailReminder.trim().length <= 0) {\n    yield put(LoginActions.reminderFailure(LOGIN_ERRORS.MISSING_REMINDER));\n  } else if (!regexEmail.test(emailReminder)) {\n    yield put(LoginActions.reminderFailure(LOGIN_ERRORS.FORMAT_REMINDER));\n  } else {\n    const response = yield call(api.reminder, emailReminder);\n    if (response.ok) {\n      yield put(LoginActions.reminderSuccess(emailReminder));\n    } else {\n      yield put(LoginActions.reminderFailure(LOGIN_ERRORS.WRONG));\n    }\n  }\n}\n\nexport function* loginFB(api, action) {\n  const { fullName, firstName, lastName, picture, email } = action;\n  yield put(\n    LoginActions.loginFbSuccess(fullName, firstName, lastName, picture, email)\n  );\n}\n","import { takeLatest, all } from 'redux-saga/effects';\n// import DebugConfig from '../Config/DebugConfig'\nimport loginApi from '../services/LoginApi';\n\n/* ------------- Types ------------- */\n\nimport { LoginTypes } from '../redux/LoginRedux';\n\n/* ------------- Sagas ------------- */\n\nimport { checkAuth, login, reminder } from './LoginSagas';\n\n/* ------------- API ------------- */\n\n// The API we use is only used from Sagas, so we create it here and pass along\n// to the sagas which need it.\n// const api = DebugConfig.useFixtures ? FixtureAPI : API.create()\n\n/* ------------- Connect Types To Sagas ------------- */\n\nexport default function* root() {\n  yield all([\n    // LOGIN ACTIONS\n    takeLatest(LoginTypes.LOGIN_REQUEST, login, loginApi),\n    takeLatest(LoginTypes.CHECK_IF_LOGGED_IN_REQUEST, checkAuth, loginApi),\n    takeLatest(LoginTypes.REMINDER_REQUEST, reminder, loginApi)\n  ]);\n}\n","import { combineReducers } from 'redux';\nimport configureStore from './CreateStore';\nimport rootSaga from '../sagas';\n\n/* ------------- Assemble The Reducers ------------- */\nexport const reducers = combineReducers({\n  login: require('./LoginRedux').reducer,\n});\n\nexport default () => {\n  let finalReducers = reducers;\n\n  let { history, store, sagasManager, sagaMiddleware } = configureStore(\n    finalReducers,\n    rootSaga\n  );\n\n  if (module.hot) {\n    module.hot.accept(() => {\n      const nextRootReducer = require('.').reducers;\n      store.replaceReducer(nextRootReducer);\n\n      const newYieldedSagas = require('../sagas').default;\n      sagasManager.cancel();\n      sagasManager.done.then(() => {\n        sagasManager = sagaMiddleware.run(newYieldedSagas);\n      });\n    });\n  }\n\n  return {\n    history,\n    store\n  };\n};\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { Provider } from 'react-redux';\n\nimport Dashboard from './containers/Dashboard';\nimport Login from './containers/Login'\n\nimport createStore from './redux';\nconst { store } = createStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route path=\"/*\" component={()=><h1 style={{color:'red'}}>NOT FOUND!!!</h1>} />\n          </Switch>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\n// creates the store\nexport default (rootReducer, rootSaga) => {\n  /* ------------- Redux Configuration ------------- */\n\n  const middleware = [];\n  const enhancers = [];\n\n  /* ------------- Saga Middleware ------------- */\n\n  const sagaMonitor = null;\n  const sagaMiddleware = createSagaMiddleware({ sagaMonitor });\n  middleware.push(sagaMiddleware);\n\n  /* ------------- Assemble Middleware ------------- */\n\n  enhancers.push(applyMiddleware(...middleware));\n\n  const createAppropriateStore = createStore;\n  const store = createAppropriateStore(rootReducer, compose(...enhancers));\n\n  // kick off root saga\n  let sagasManager = sagaMiddleware.run(rootSaga);\n\n  return {\n    store,\n    sagasManager,\n    sagaMiddleware\n  };\n};\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","// Simple React Native specific changes\n\nexport default {\n  // API_BASE_URL: 'http://localhost:4002/server/api',\n  API_BASE_URL: '',\n  APP_NAME: 'pacific-time'\n  // SANDBOX_API_BASE_URL: 'http://sdbx-premium.segmoapp.fr/server/api',\n};\n"],"sourceRoot":""}